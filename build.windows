# Define the compiler and compilation flags
CC = x86_64-w64-mingw32-gcc
CCACHE = ccache
CFLAGS = -g
LIBS = -lSDL2 -lSDL2_image
WIN_LIBS = -static-libgcc -Wl,-Bstatic -lpthread -lcomctl32 -lpsapi -lmingw32 $(LIBS) -mwindows -Wl,--dynamicbase -Wl,--nxcompat -Wl,--high-entropy-va -lm -ldinput8 -ldxguid -ldxerr8 -luser32 -lgdi32 -lwinmm -limm32 -lole32 -loleaut32 -lshell32 -lsetupapi -lversion -luuid -Wl,-Bdynamic

# Directories
SRC_DIR = src
BUILD_DIR = build

# List of source files and corresponding object files
SRC_FILES = $(wildcard $(SRC_DIR)/*.c)
OBJ_FILES = $(patsubst $(SRC_DIR)/%.c,$(BUILD_DIR)/%.o,$(SRC_FILES))

# The default target is to build all object files
all: clean $(OBJ_FILES)
	$(CCACHE) $(CC) $(BUILD_DIR)/*.o $(WIN_LIBS) -o GLOOM.EXE

# Rule to compile a .c file to a .o file
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c
	$(CCACHE) $(CC) $(CFLAGS) -c $< -o $@

# Clean up the object files
clean:
	rm -f $(BUILD_DIR)/*.o
	mkdir -p $(BUILD_DIR)

# PHONY target to force the "clean" target to run even if a file named "clean" exists
.PHONY: clean